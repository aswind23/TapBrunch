{"version":3,"sources":["app/js/initialize.js","app/js/script.js","app/js/users.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/js/app.js","sourcesContent":["'use strict';\n\nvar app = angular.module('tabApp', ['ngRoute', 'ngCookies']);\nvar token;\n\napp.config(['$httpProvider', function ($httpProvider) {\n\t$httpProvider.defaults.headers.post['Content-Type'] = '' + 'application/json; charset=UTF-8';\n\t$httpProvider.defaults.headers.put['Content-Type'] = '' + 'application/json; charset=UTF-8';\n}]);\napp.run(['$location', '$rootScope', function ($location, $rootScope) {\n\t$rootScope.title = '';\n\t$rootScope.$on('$routeChangeSuccess', function (event, current, previous) {\n\t\t$rootScope.title = current.$$route.title;\n\t\t$rootScope.isActive = function (path) {\n\t\t\treturn $location.path().substr(0, path.length) === path ? true : false;\n\t\t};\n\t});\n}]);\napp.config(['$routeProvider', '$locationProvider', function ($routeProvider, $locationProvider) {\n\t$locationProvider.html5Mode(true).hashPrefix('!');\n\t$routeProvider.when('/pages/not_found', {\n\t\ttitle: 'Page Not Found',\n\t\ttemplateUrl: 'app/pages/not_found.html',\n\t\tcontroller: ''\n\t}).when('/about', {\n\t\ttitle: 'About',\n\t\ttemplateUrl: 'app/pages/about.html',\n\t\tcontroller: ''\n\t}).otherwise({\n\t\tredirectTo: '/pages/not_found'\n\t});\n}]);\napp.factory('authHttpResponseInterceptor', ['$q', '$location', '$rootScope', function ($q, $location, $rootScope) {\n\treturn {\n\t\tresponse: function response(_response) {\n\t\t\tif (_response.status === 401) {\n\t\t\t\t//console.log(\"Response 401\");\n\t\t\t}\n\t\t\treturn _response || $q.when(_response);\n\t\t},\n\t\tresponseError: function responseError(rejection) {\n\t\t\tif (rejection.status === 401) {\n\t\t\t\t$rootScope.isLoggedIn = false;\n\t\t\t\temptyLocalStorage();\n\t\t\t\t//console.log(\"Response Error 401\",rejection);\n\t\t\t\t$location.path('/login');\n\t\t\t} else if (rejection.status >= 500) {\n\t\t\t\t$rootScope.isServerError = true;\n\t\t\t}\n\t\t\treturn $q.reject(rejection);\n\t\t}\n\t};\n}]);\n","\"use strict\";\n\n(function ($) {\n  \"use strict\";\n  /*$(document).ready(function(){\r\n  $(\".loginLink a\").click(function(e){\r\n  $(\".mobileContent\").addClass(\"toggleContent\");\r\n  e.preventDefault();\r\n  \t});\r\n  });*/\n})(jQuery);\n","'use strict';\n\nvar userModule = angular.module('userModule', ['ngRoute', 'ngCookies', 'ngResource']);\nuserModule.filter('unsafe', function ($sce) {\n\treturn $sce.trustAsHtml;\n});\nuserModule.config(['$routeProvider', '$locationProvider', function ($routeProvider, $locationProvider) {\n\t$locationProvider.html5Mode(true).hashPrefix('!');\n\t$routeProvider.when('/login', {\n\t\ttitle: 'Login',\n\t\ttemplateUrl: 'app/users/login.html',\n\t\tcontroller: 'LoginController'\n\t}).when('/', {\n\t\ttitle: 'Login',\n\t\ttemplateUrl: 'app/users/login.html',\n\t\tcontroller: 'LoginController'\n\t}).when('/create', {\n\t\ttitle: 'Create',\n\t\ttemplateUrl: 'app/users/create.html',\n\t\tcontroller: 'LoginController'\n\t}).when('/my_account', {\n\t\ttitle: 'My Account',\n\t\ttemplateUrl: 'app/users/my_account.html',\n\t\tcontroller: 'LoginController'\n\t}).when('/change_password', {\n\t\ttitle: 'Change Password',\n\t\ttemplateUrl: 'app/users/change_password.html',\n\t\tcontroller: 'LoginController'\n\t}).when('/forgotpass', {\n\t\ttitle: 'Forgot Password',\n\t\ttemplateUrl: 'app/users/forgotpass.html',\n\t\tcontroller: 'LoginController'\n\t}).when('/reset_password', {\n\t\ttitle: 'Reset Password',\n\t\ttemplateUrl: 'app/users/reset_password.html',\n\t\tcontroller: 'LoginController'\n\t}).when('/user_activation', {\n\t\ttitle: 'User Activation',\n\t\ttemplateUrl: 'app/users/user_activation.html',\n\t\tcontroller: 'LoginController'\n\t});\n}]);\nuserModule.controller('loginController', ['$rootScope', '$routeParams', '$scope', '$http', '$location', '$timeout', '$window', function ($rootScope, $routeParams, $scope, $http, $location, $timeout, $window) {\n\t$scope.activation = {};\n\t$rootScope.isLoggedIn = false;\n\t$scope.loginSubmit = 'Login';\n\t$scope.login = function (custId, password) {\n\t\tif (!$scope.isSending) {\n\t\t\t$scope.isSending = true;\n\t\t\t$scope.loginSubmit = 'Authentication Processing...';\n\t\t\t$http.post(baseUrl + '/user/login', { userId: custId, pwd: password }).success(function (response) {\n\t\t\t\t$scope.isSending = false;\n\t\t\t\t$rootScope.isLoggedIn = true;\n\t\t\t\t$rootScope.userRole = response.data.role;\n\t\t\t\t$rootScope.consId = response.data.consId;\n\t\t\t\t$rootScope.username = response.data.username;\n\t\t\t\tsetLocalStorage(response.data.token, response.data.consId, response.data.username, response.data.role);\n\t\t\t\tapi.init(response.data.token);\n\t\t\t\t$location.path('/dashboard');\n\t\t\t}).error(function (data, status) {\n\t\t\t\t$scope.isSending = false;\n\t\t\t\t$scope.loginErr = true;\n\t\t\t\t$scope.loginSubmit = 'Login';\n\t\t\t\t$scope.loginErrText = data.msg;\n\t\t\t});\n\t\t}\n\t};\n}]);\n"]}